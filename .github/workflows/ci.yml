name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd app
          npm ci

      - name: Run ESLint
        run: |
          cd app
          npx eslint .

  build:
    name: Build Docker Image
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build-image.outputs.image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine image tag
        id: build-image
        run: |
          OWNER=${{ github.repository_owner }}
          # Lowercase the owner
          OWNER_LOWER=${OWNER,,}
          IMAGE_TAG="ghcr.io/${OWNER_LOWER}/devops-reto-entorno:latest"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t ${{ needs.build.outputs.image-tag }} .

  push:
    name: Push Docker Image to GHCR
    needs: [lint, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          echo "${GHCR_TOKEN}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          docker push ${{ needs.build.outputs.image-tag }}
